/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.myst;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.myst.MystFactory
 * @model kind="package"
 * @generated
 */
public interface MystPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "myst";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/mydsl/Myst";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "myst";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MystPackage eINSTANCE = org.xtext.example.mydsl.myst.impl.MystPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myst.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myst.impl.ProgramImpl
   * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Csv</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__CSV = 0;

  /**
   * The feature id for the '<em><b>Parse</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__PARSE = 1;

  /**
   * The feature id for the '<em><b>Calcul</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__CALCUL = 2;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__METRIC = 3;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myst.impl.CSVImpl <em>CSV</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myst.impl.CSVImpl
   * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getCSV()
   * @generated
   */
  int CSV = 1;

  /**
   * The feature id for the '<em><b>Cvsfile</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CSV__CVSFILE = 0;

  /**
   * The number of structural features of the '<em>CSV</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CSV_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myst.impl.ParseImpl <em>Parse</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myst.impl.ParseImpl
   * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getParse()
   * @generated
   */
  int PARSE = 2;

  /**
   * The feature id for the '<em><b>Variable Cible</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSE__VARIABLE_CIBLE = 0;

  /**
   * The number of structural features of the '<em>Parse</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myst.impl.CalculImpl <em>Calcul</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myst.impl.CalculImpl
   * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getCalcul()
   * @generated
   */
  int CALCUL = 3;

  /**
   * The feature id for the '<em><b>Strategy</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCUL__STRATEGY = 0;

  /**
   * The feature id for the '<em><b>Algorithm</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCUL__ALGORITHM = 1;

  /**
   * The number of structural features of the '<em>Calcul</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCUL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myst.impl.StrategyImpl <em>Strategy</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myst.impl.StrategyImpl
   * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getStrategy()
   * @generated
   */
  int STRATEGY = 4;

  /**
   * The feature id for the '<em><b>Training Test</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRATEGY__TRAINING_TEST = 0;

  /**
   * The feature id for the '<em><b>Cross Validation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRATEGY__CROSS_VALIDATION = 1;

  /**
   * The number of structural features of the '<em>Strategy</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRATEGY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myst.impl.CrossValidationImpl <em>Cross Validation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myst.impl.CrossValidationImpl
   * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getCrossValidation()
   * @generated
   */
  int CROSS_VALIDATION = 5;

  /**
   * The feature id for the '<em><b>Motcle</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CROSS_VALIDATION__MOTCLE = 0;

  /**
   * The number of structural features of the '<em>Cross Validation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CROSS_VALIDATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myst.impl.TrainingTestImpl <em>Training Test</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myst.impl.TrainingTestImpl
   * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getTrainingTest()
   * @generated
   */
  int TRAINING_TEST = 6;

  /**
   * The feature id for the '<em><b>Test Rate</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRAINING_TEST__TEST_RATE = 0;

  /**
   * The number of structural features of the '<em>Training Test</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRAINING_TEST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myst.Algorithm <em>Algorithm</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myst.Algorithm
   * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getAlgorithm()
   * @generated
   */
  int ALGORITHM = 7;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.myst.Metric <em>Metric</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.myst.Metric
   * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getMetric()
   * @generated
   */
  int METRIC = 8;


  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myst.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see org.xtext.example.mydsl.myst.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myst.Program#getCsv <em>Csv</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Csv</em>'.
   * @see org.xtext.example.mydsl.myst.Program#getCsv()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Csv();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myst.Program#getParse <em>Parse</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parse</em>'.
   * @see org.xtext.example.mydsl.myst.Program#getParse()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Parse();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myst.Program#getCalcul <em>Calcul</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Calcul</em>'.
   * @see org.xtext.example.mydsl.myst.Program#getCalcul()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Calcul();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myst.Program#getMetric <em>Metric</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Metric</em>'.
   * @see org.xtext.example.mydsl.myst.Program#getMetric()
   * @see #getProgram()
   * @generated
   */
  EAttribute getProgram_Metric();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myst.CSV <em>CSV</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>CSV</em>'.
   * @see org.xtext.example.mydsl.myst.CSV
   * @generated
   */
  EClass getCSV();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myst.CSV#getCvsfile <em>Cvsfile</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cvsfile</em>'.
   * @see org.xtext.example.mydsl.myst.CSV#getCvsfile()
   * @see #getCSV()
   * @generated
   */
  EAttribute getCSV_Cvsfile();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myst.Parse <em>Parse</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parse</em>'.
   * @see org.xtext.example.mydsl.myst.Parse
   * @generated
   */
  EClass getParse();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myst.Parse#getVariableCible <em>Variable Cible</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Variable Cible</em>'.
   * @see org.xtext.example.mydsl.myst.Parse#getVariableCible()
   * @see #getParse()
   * @generated
   */
  EAttribute getParse_VariableCible();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myst.Calcul <em>Calcul</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Calcul</em>'.
   * @see org.xtext.example.mydsl.myst.Calcul
   * @generated
   */
  EClass getCalcul();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myst.Calcul#getStrategy <em>Strategy</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Strategy</em>'.
   * @see org.xtext.example.mydsl.myst.Calcul#getStrategy()
   * @see #getCalcul()
   * @generated
   */
  EReference getCalcul_Strategy();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myst.Calcul#getAlgorithm <em>Algorithm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Algorithm</em>'.
   * @see org.xtext.example.mydsl.myst.Calcul#getAlgorithm()
   * @see #getCalcul()
   * @generated
   */
  EAttribute getCalcul_Algorithm();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myst.Strategy <em>Strategy</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Strategy</em>'.
   * @see org.xtext.example.mydsl.myst.Strategy
   * @generated
   */
  EClass getStrategy();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myst.Strategy#getTrainingTest <em>Training Test</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Training Test</em>'.
   * @see org.xtext.example.mydsl.myst.Strategy#getTrainingTest()
   * @see #getStrategy()
   * @generated
   */
  EReference getStrategy_TrainingTest();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.myst.Strategy#getCrossValidation <em>Cross Validation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cross Validation</em>'.
   * @see org.xtext.example.mydsl.myst.Strategy#getCrossValidation()
   * @see #getStrategy()
   * @generated
   */
  EReference getStrategy_CrossValidation();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myst.CrossValidation <em>Cross Validation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cross Validation</em>'.
   * @see org.xtext.example.mydsl.myst.CrossValidation
   * @generated
   */
  EClass getCrossValidation();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myst.CrossValidation#getMotcle <em>Motcle</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Motcle</em>'.
   * @see org.xtext.example.mydsl.myst.CrossValidation#getMotcle()
   * @see #getCrossValidation()
   * @generated
   */
  EAttribute getCrossValidation_Motcle();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.myst.TrainingTest <em>Training Test</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Training Test</em>'.
   * @see org.xtext.example.mydsl.myst.TrainingTest
   * @generated
   */
  EClass getTrainingTest();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.myst.TrainingTest#getTestRate <em>Test Rate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Test Rate</em>'.
   * @see org.xtext.example.mydsl.myst.TrainingTest#getTestRate()
   * @see #getTrainingTest()
   * @generated
   */
  EAttribute getTrainingTest_TestRate();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.mydsl.myst.Algorithm <em>Algorithm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Algorithm</em>'.
   * @see org.xtext.example.mydsl.myst.Algorithm
   * @generated
   */
  EEnum getAlgorithm();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.mydsl.myst.Metric <em>Metric</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Metric</em>'.
   * @see org.xtext.example.mydsl.myst.Metric
   * @generated
   */
  EEnum getMetric();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MystFactory getMystFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myst.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myst.impl.ProgramImpl
     * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '<em><b>Csv</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__CSV = eINSTANCE.getProgram_Csv();

    /**
     * The meta object literal for the '<em><b>Parse</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__PARSE = eINSTANCE.getProgram_Parse();

    /**
     * The meta object literal for the '<em><b>Calcul</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__CALCUL = eINSTANCE.getProgram_Calcul();

    /**
     * The meta object literal for the '<em><b>Metric</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRAM__METRIC = eINSTANCE.getProgram_Metric();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myst.impl.CSVImpl <em>CSV</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myst.impl.CSVImpl
     * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getCSV()
     * @generated
     */
    EClass CSV = eINSTANCE.getCSV();

    /**
     * The meta object literal for the '<em><b>Cvsfile</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CSV__CVSFILE = eINSTANCE.getCSV_Cvsfile();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myst.impl.ParseImpl <em>Parse</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myst.impl.ParseImpl
     * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getParse()
     * @generated
     */
    EClass PARSE = eINSTANCE.getParse();

    /**
     * The meta object literal for the '<em><b>Variable Cible</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARSE__VARIABLE_CIBLE = eINSTANCE.getParse_VariableCible();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myst.impl.CalculImpl <em>Calcul</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myst.impl.CalculImpl
     * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getCalcul()
     * @generated
     */
    EClass CALCUL = eINSTANCE.getCalcul();

    /**
     * The meta object literal for the '<em><b>Strategy</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CALCUL__STRATEGY = eINSTANCE.getCalcul_Strategy();

    /**
     * The meta object literal for the '<em><b>Algorithm</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CALCUL__ALGORITHM = eINSTANCE.getCalcul_Algorithm();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myst.impl.StrategyImpl <em>Strategy</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myst.impl.StrategyImpl
     * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getStrategy()
     * @generated
     */
    EClass STRATEGY = eINSTANCE.getStrategy();

    /**
     * The meta object literal for the '<em><b>Training Test</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRATEGY__TRAINING_TEST = eINSTANCE.getStrategy_TrainingTest();

    /**
     * The meta object literal for the '<em><b>Cross Validation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRATEGY__CROSS_VALIDATION = eINSTANCE.getStrategy_CrossValidation();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myst.impl.CrossValidationImpl <em>Cross Validation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myst.impl.CrossValidationImpl
     * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getCrossValidation()
     * @generated
     */
    EClass CROSS_VALIDATION = eINSTANCE.getCrossValidation();

    /**
     * The meta object literal for the '<em><b>Motcle</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CROSS_VALIDATION__MOTCLE = eINSTANCE.getCrossValidation_Motcle();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myst.impl.TrainingTestImpl <em>Training Test</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myst.impl.TrainingTestImpl
     * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getTrainingTest()
     * @generated
     */
    EClass TRAINING_TEST = eINSTANCE.getTrainingTest();

    /**
     * The meta object literal for the '<em><b>Test Rate</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRAINING_TEST__TEST_RATE = eINSTANCE.getTrainingTest_TestRate();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myst.Algorithm <em>Algorithm</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myst.Algorithm
     * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getAlgorithm()
     * @generated
     */
    EEnum ALGORITHM = eINSTANCE.getAlgorithm();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.myst.Metric <em>Metric</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.myst.Metric
     * @see org.xtext.example.mydsl.myst.impl.MystPackageImpl#getMetric()
     * @generated
     */
    EEnum METRIC = eINSTANCE.getMetric();

  }

} //MystPackage
